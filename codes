#include<iostream>
using namespace std;
void MERGE(int arr[], int l, int m, int r)//m = l + (r - l)/2; l=first 
index,r=last index,0-8,m=4. 
{
 int i, j, k; // htree variable:i to track, j private subarray, k the finle 
matrix"merge".
 int n1 = m - l + 1;// First subarray is arr[l..m]>> 4 
 int n2 = r - m;// Second subarray is arr[m+1..r]>> 4 
 int* L = new int[n1], * R = new int[n2];
 for (i = 0; i < n1; i++)
 L[i] = arr[l + i];
 for (j = 0; j < n2; j++)
 R[j] = arr[m + 1 + j];
 i = j = 0;
 k = l;
 while (i < n1 && j < n2)
 {
 if (L[i] <= R[j])
 {
 arr[k] = L[i];
 i++;
 }
 else
 {
 arr[k] = R[j];
 j++;
 }
 k++;
 }
 while (i < n1)
 {
 arr[k] = L[i];
 i++;
 k++;
 }
 while (j < n2)
 {
 arr[k] = R[j];
 j++;
 k++;
 }
}
void mergeSort(int arr[], int l, int r)
{
 if (l < r)
 {
 int m = l + (r - l) / 2;
 mergeSort(arr, l, m);
 mergeSort(arr, m + 1, r);
 MERGE(arr, l, m, r);
 }
}
void print(int arr[], int n)
{
 cout << "___________________________________" << endl;
 cout << " mareg store array is: " << endl;
 for (int i = 0; i < n; i++)
 {
 cout << arr[i] << " ";
 }
 cout << endl;
 cout << "___________________________________" << endl;
}
int main()
{
 int arr[] = { 99,88,77,66,55,44,33,22 };
 int n = sizeof(arr) / sizeof(arr[0]);
 mergeSort(arr, 0, n - 1);
 print(arr, n);
 return 0;
}
